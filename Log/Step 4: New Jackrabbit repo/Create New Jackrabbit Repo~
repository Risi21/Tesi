1) Creare Database in MySql

- crea uno user con tutti i privilegi solo per quel database

2) Copiare il jackrabbit-webapp.war nella cartella webapps dell'unica istanza di tomcat

3) Creare cartella del repository, nel percorso prefissato (quella che contiene le cartelle
repository workspaces e i file repository.xml bootrstrap.properties)

N.B. Guarda che differenza c'è a livello di permessi tra il mkdir di Ubuntu e di Java (.mkdirs())

4) Cambia il proprietario della cartella appena creata all'utente di tomcat

5) Creare bootstrap.properties (da zero), con i vari parametri

6) Creare repository.xml (da zero), con i vari parametri (tra cui il nome dell'admin del repo)

7) Aspettare che Tomcat finisca di deployare jackrabbit-webapp.war (e quindi crea la cartella con tutti i file dentro a webapps senza il .war)

Con l'autodeploy basta fare un ciclo while (!exist)

Cancella e crea WEB-INF/web.xml dentro alla cartella di jackrabbit-webapp undeployato, con i vari parametri

8) Aspetta che il repository venga creato (le tabelle del db in mysql vengono riempite e vengono creati tutti i file dentro alle cartelle repository e workspaces)

Controllare la creazione di tutti i file e delle cartelle con tanti cicli while (!exist)

TODO: DA CONTROLLARE
- Prima della creazione delle cartelle workspaces/default e workspaces/security cancello il .lock,
da provare se funziona anche se lo cancello alla fine della creazione di tutti i file

9) Gestione utenti repository

- Prima di fare la connessione al repository da java bisogna eliminare il file .lock che si è creato
in precedenza da solo

- Disabilita utente anonymous per il repository

- Cambia password all'admin del repository
